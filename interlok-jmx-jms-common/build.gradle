ext {
  componentName = "Interlok JMX/Common"
  componentDesc = "Common classes required to tunnel JMX calls"
}

dependencies {
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

jar {
  manifest {
    attributes("Built-By": System.getProperty('user.name'),
              "Build-Jdk": System.getProperty('java.version'),
              "Implementation-Title": componentName,
              "Implementation-Version": project.version,
              "Implementation-Vendor-Id": project.group,
              "Implementation-Vendor": organizationName,
              "Add-Opens": "java.base/java.lang java.base/java.util java.base/java.lang.reflect java.management/javax.management")
  }
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact javadocJar { classifier "javadoc" }
      artifact sourcesJar { classifier "sources" }

      pom.withXml {
        asNode().appendNode("name", componentName)
        asNode().appendNode("description", componentDesc)
        asNode().appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/pages/advanced/advanced-jmx-jms")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.10.0+")
        properties.appendNode("tags", "jmx,jms")
        properties.appendNode("license", "false")
        properties.appendNode("readme", "https://github.com/adaptris/interlok-jmx-jms/raw/develop/README.md")
        properties.appendNode("repository", "https://github.com/adaptris/interlok-jmx-jms")
        properties.appendNode("deprecated", "This component has been deprecated with no replacement and will be removed in a future version")
      }
    }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}