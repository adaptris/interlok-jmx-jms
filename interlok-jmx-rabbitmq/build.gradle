ext {
  componentName = "Interlok JMX/RabbitMQ"
  componentDesc = "Tunnelling JMX calls via RabbitMQ"
}

group = 'com.adaptris.labs'

dependencies {
  api project(':interlok-jmx-jms-common')
  implementation ("com.rabbitmq.jms:rabbitmq-jms:2.4.0")
  implementation ("com.rabbitmq:amqp-client:5.20.0")

  testImplementation project(':interlok-jmx-jms-stubs')
  testImplementation ("javax.management.j2ee:javax.management.j2ee-api:1.1.2")

}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

jar {
  manifest {
    attributes("Built-By": System.getProperty('user.name'),
              "Build-Jdk": System.getProperty('java.version'),
              "Implementation-Title": componentName,
              "Implementation-Version": project.version,
              "Implementation-Vendor-Id": project.group,
              "Implementation-Vendor": organizationName)
  }
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact javadocJar { classifier "javadoc" }
      artifact sourcesJar { classifier "sources" }

      pom.withXml {
        asNode().appendNode("name", componentName)
        asNode().appendNode("description", componentDesc)
        asNode().appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/pages/advanced/advanced-jmx-jms")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.10.0+")
        properties.appendNode("tags", "jmx,jms")
        properties.appendNode("license", "false")
        properties.appendNode("readme", "https://github.com/adaptris/interlok-jmx-jms/raw/develop/README.md")
        properties.appendNode("repository", "https://github.com/adaptris/interlok-jmx-jms")
      }
    }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}

processTestResources.dependsOn copyUnitTestProperties
